# This is a basic workflow to help you get started with Actions

name: CI

env:
  DISPLAY: ':99'
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [ master,  github-workflow-playground ]
  pull_request:
    branches: [ master ]
#  schedule:
#    - cron: "0 */12 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  window-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodule repo
        uses: actions/checkout@v2
        with:
          repository: bluetiger9/SmtpClient-for-Qt
          path: "src/smtpclient/"
          ref: 3fa4a0fe5797070339422cf18b5e9ed8dcb91f9c

      - uses: actions/checkout@v2
      - name: Checkout submodule repo
        uses: actions/checkout@v2
        with:
          repository: cagnulein/qmdnsengine
          path: "src/qmdnsengine/"
          ref: "zwift"   

      - uses: actions/checkout@v2
      - name: Checkout submodule repo
        uses: actions/checkout@v2
        with:
          repository: google/googletest
          path: "tst/googletest/"
          ref: "release-1.12.1"

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'windows'
          modules: 'qtnetworkauth qtcharts'
          target: "desktop"
          arch: win64_msvc2019_64
          dir: "${{github.workspace}}/qt/"
          install-deps: "true"
          cache: 'true'
          cache-key-prefix: 'install-qt-action-windows'          

      - name: Build
        shell: cmd
        run: |
            call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
            qmake
            cd src
            echo "#define STRAVA_SECRET_KEY ${{ secrets.strava_secret_key }}" > secret.h
            echo "#define SMTP_USERNAME ${{ secrets.smtp_username }}" >> secret.h
            echo "#define SMTP_PASSWORD ${{ secrets.smtp_password }}" >> secret.h
            echo "#define SMTP_SERVER ${{ secrets.smtp_server }}" >> secret.h
            cd ..
            nmake
            cd src/debug
            mkdir output
            mkdir appx
            cp qdomyos-zwift.exe output/
            cd output
            windeployqt --qmldir ../../ qdomyos-zwift.exe
            cp ../../../icons/iOS/iTunesArtwork@2x.png .
            cp ../../AppxManifest.xml .
            cp ../../windows/*.py .
            mkdir adb
            mkdir python
            Copy-Item -Path C:\hostedtoolcache\windows\Python\3.10.11\x64 -Destination python -Recurse
            cp ../../adb/* adb/
            cd ..
            cd appx
            #../../MSIX-Toolkit/WindowsSDK/10/10.0.20348.0/x64/makeappx.exe pack /d ../output/ /p qz   

      - name: Zip artifact for deployment
        run: Compress-Archive src/debug/output release.zip

      - name: Archive windows binary
        uses: actions/upload-artifact@v2
        with:
          name: windows-binary
          path: release.zip
        if: matrix.config.python

      - name: Archive windows binary
        uses: actions/upload-artifact@v2
        with:
          name: windows-binary-no-python
          path: release.zip
        if:  ${{ ! matrix.config.python }}

#  window-steam-build:
#    runs-on: windows-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Checkout submodule repo
#        uses: actions/checkout@v2
#        with:
#          repository: bluetiger9/SmtpClient-for-Qt
#          path: "src/smtpclient/"
#          ref: 3fa4a0fe5797070339422cf18b5e9ed8dcb91f9c
#
#      - uses: actions/checkout@v2
#      - name: Checkout submodule repo
#        uses: actions/checkout@v2
#        with:
#          repository: cagnulein/qmdnsengine
#          path: "src/qmdnsengine/"
#          ref: "zwift"
#
#      - uses: msys2/setup-msys2@v2
#        with:
#          install: mingw-w64-x86_64-toolchain
#          msystem: mingw64
#          release: false
#
#      - name: Setup cmake
#        uses: jwlawson/actions-setup-cmake@v1.9
#        with:
#          cmake-version: '3.20.x'
#
#      - name: Install Qt
#        uses: jurplel/install-qt-action@v2
#        with:
#          version: '5.15.2'
#          host: 'windows'
#          modules: 'qtnetworkauth qtcharts'
#          target: "desktop"
#          arch: win64_mingw81
#          dir: "${{github.workspace}}/qt/"
#          install-deps: "true"
#
#      - name: Build
#        run: |
#            qmake
#            cd src
#            echo "#define STRAVA_SECRET_KEY ${{ secrets.strava_secret_key }}" > secret.h
#            echo "#define SMTP_USERNAME ${{ secrets.smtp_username }}" >> secret.h
#            echo "#define SMTP_PASSWORD ${{ secrets.smtp_password }}" >> secret.h
#            echo "#define SMTP_SERVER ${{ secrets.smtp_server }}" >> secret.h
#            echo "#define STEAM_STORE" >> secret.h
#            cd ..
#            make -j8
#            cd src/debug
#            mkdir output
#            mkdir appx
#            cp qdomyos-zwift.exe output/
#            cd output
#            windeployqt --qmldir ../../ qdomyos-zwift.exe
#            cp "${{github.workspace}}/qt/Qt/5.15.2/mingw81_64/bin/libwinpthread-1.dll" .
#            cp "${{github.workspace}}/qt/Qt/5.15.2/mingw81_64/bin/libgcc_s_seh-1.dll" .
#            cp "${{github.workspace}}/qt/Qt/5.15.2/mingw81_64/bin/libstdc++-6.dll" .
#
#      - uses: game-ci/steam-deploy@v1
#        with:
#          username: ${{ secrets.STEAM_USERNAME }}
#          password: ${{ secrets.STEAM_PASSWORD }}
#          configVdf: ${{ secrets.STEAM_CONFIG_VDF}}
#          ssfnFileName: ${{ secrets.STEAM_SSFN_FILE_NAME }}
#          ssfnFileContents: ${{ secrets.STEAM_SSFN_FILE_CONTENTS }}
#          appId: 2267200
#          buildDescription: 2.12
#          rootPath: src/debug/output
#          depot1Path: ./
#          #depot2Path: StandaloneLinux64
#          releaseBranch: prerelease

